[{"/Users/Ruben/Development/portfolio-react/src/index.js":"1","/Users/Ruben/Development/portfolio-react/src/App.js":"2","/Users/Ruben/Development/portfolio-react/src/reportWebVitals.js":"3","/Users/Ruben/Development/portfolio-react/src/components/Footer.js":"4","/Users/Ruben/Development/portfolio-react/src/components/Nav.js":"5","/Users/Ruben/Development/portfolio-react/src/components/WorkGrid.js":"6","/Users/Ruben/Development/portfolio-react/src/components/ContactModule.js":"7","/Users/Ruben/Development/portfolio-react/src/components/AboutBanner.js":"8","/Users/Ruben/Development/portfolio-react/src/components/AboutWork.js":"9","/Users/Ruben/Development/portfolio-react/src/components/AboutInfo.js":"10","/Users/Ruben/Development/portfolio-react/src/components/WorkBanner.js":"11","/Users/Ruben/Development/portfolio-react/src/components/ContactButtons.js":"12","/Users/Ruben/Development/portfolio-react/src/pages/Contact.js":"13","/Users/Ruben/Development/portfolio-react/src/pages/Home.js":"14","/Users/Ruben/Development/portfolio-react/src/pages/Work.js":"15","/Users/Ruben/Development/portfolio-react/src/pages/AboutUs.js":"16","/Users/Ruben/Development/portfolio-react/src/pages/WorkItem.js":"17","/Users/Ruben/Development/portfolio-react/src/workState.js":"18"},{"size":572,"mtime":1611844014792,"results":"19","hashOfConfig":"20"},{"size":826,"mtime":1611844014173,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1609258932518,"results":"22","hashOfConfig":"20"},{"size":1066,"mtime":1611844014181,"results":"23","hashOfConfig":"20"},{"size":2583,"mtime":1611844014183,"results":"24","hashOfConfig":"20"},{"size":1410,"mtime":1611844014184,"results":"25","hashOfConfig":"20"},{"size":1328,"mtime":1611844014179,"results":"26","hashOfConfig":"20"},{"size":915,"mtime":1611844014174,"results":"27","hashOfConfig":"20"},{"size":3432,"mtime":1611844014176,"results":"28","hashOfConfig":"20"},{"size":1490,"mtime":1611844014175,"results":"29","hashOfConfig":"20"},{"size":924,"mtime":1611844014184,"results":"30","hashOfConfig":"20"},{"size":760,"mtime":1611844014177,"results":"31","hashOfConfig":"20"},{"size":844,"mtime":1611844014794,"results":"32","hashOfConfig":"20"},{"size":4519,"mtime":1611855019088,"results":"33","hashOfConfig":"20"},{"size":513,"mtime":1611844014931,"results":"34","hashOfConfig":"20"},{"size":393,"mtime":1611844014793,"results":"35","hashOfConfig":"20"},{"size":8045,"mtime":1611844014934,"results":"36","hashOfConfig":"20"},{"size":19147,"mtime":1611844014977,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"17f8ym7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/Users/Ruben/Development/portfolio-react/src/index.js",[],["79","80"],"/Users/Ruben/Development/portfolio-react/src/App.js",[],"/Users/Ruben/Development/portfolio-react/src/reportWebVitals.js",[],"/Users/Ruben/Development/portfolio-react/src/components/Footer.js",[],"/Users/Ruben/Development/portfolio-react/src/components/Nav.js",[],"/Users/Ruben/Development/portfolio-react/src/components/WorkGrid.js",["81"],"import React, { useState } from 'react';\nimport { workState } from '../workState';\n//Page components\n\n\nconst WorkGrid = () => {\n    const [workItems, setWorkItems] = useState(workState);\n    return (\n        <div className=\"work work--list\">\n            <ul className=\"work__grid\">\n                {workItems.map(({ projectName, thumbnail, url, teaserText }) => (\n                    <li>\n                        <div className=\"work__card\">\n                            <div className=\"work__image\">\n                                <img src={thumbnail} alt=\"companyName\" />\n                            </div>\n                            <div className=\"work__title\">\n                                <h3>{projectName}</h3>\n                            </div>\n                            <div className=\"work__copy\">\n                                <ul>\n                                    {teaserText.map((teaserText) => (\n                                        <li>{teaserText}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"work__link\">\n                                <a href={url} className=\"button\">Read more</a>\n                            </div>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default WorkGrid;","/Users/Ruben/Development/portfolio-react/src/components/ContactModule.js",[],"/Users/Ruben/Development/portfolio-react/src/components/AboutBanner.js",[],"/Users/Ruben/Development/portfolio-react/src/components/AboutWork.js",["82","83"],"import React, { useState } from 'react';\nimport { workState } from '../workState';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\n//Icons\nimport { FaLongArrowAltRight } from 'react-icons/fa';\n\nconst AboutWork = () => {\n    const [workItems, setWorkItems] = useState(workState);\n    return (\n        <div>\n            <section id=\"about__section-3\" className=\"about__work\">\n                <div class=\"l-default\">\n                    <div className=\"about__work-container\">\n                        <div className=\"about__work-left\">\n                            <div>\n                                <h2 className=\"heading-medium\">\n                                    <span className=\"text--red-highlight\">Communication</span><br />\n                                    Is Key\n                                    </h2>\n                                <p className=\"text--lead\">\n                                    I have worked on projects for businesses across a range of industries,\n                                    from the independent cafe to the multinational art supplies distributor.\n                                </p>\n                                <p className=\"text--lead\">\n                                    I believe in face-to-face contact being the best way to communicate,\n                                    whether in person or online, so I always present my projects directly to\n                                    the client.\n                                </p>\n                                <a href=\"/work\" className=\"button\">My work</a>\n                            </div>\n                        </div>\n                        <div className=\"about__work-right\">\n\n                            <div className=\"about__work-subtitle\">\n                                <h2 class=\"heading-h4 text--red\">Examples of work</h2>\n                            </div>\n\n\n                            <Tabs className=\"tabs tabs--work\">\n                                {workItems.map(({ projectName, thumbnail, url }) => (\n                                    <TabPanel>\n                                        <div className=\"tabs__title\">\n                                            <h3 class=\"heading-medium\">{projectName}</h3>\n\n                                        </div>\n                                        <div className=\"tabs__link\">\n                                            <a href={url} className=\"arrow-link\">View project <FaLongArrowAltRight /></a>\n                                        </div>\n                                        <div className=\"tabs__image\">\n                                            <img src={thumbnail} alt={thumbnail} />\n                                        </div>\n                                    </TabPanel>\n                                ))}\n                                <TabList className=\"tabs__nav\">\n                                    {workItems.map((workItems, i) => (\n                                        <Tab className=\"tabs__nav-item\">\n                                            <a className=\"button\">{i + 1}</a>\n\n                                        </Tab>\n                                    ))}\n                                </TabList>\n                            </Tabs>\n\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n        </div>\n    )\n}\n\nexport default AboutWork;","/Users/Ruben/Development/portfolio-react/src/components/AboutInfo.js",[],"/Users/Ruben/Development/portfolio-react/src/components/WorkBanner.js",[],"/Users/Ruben/Development/portfolio-react/src/components/ContactButtons.js",[],"/Users/Ruben/Development/portfolio-react/src/pages/Contact.js",[],"/Users/Ruben/Development/portfolio-react/src/pages/Home.js",[],"/Users/Ruben/Development/portfolio-react/src/pages/Work.js",[],"/Users/Ruben/Development/portfolio-react/src/pages/AboutUs.js",[],"/Users/Ruben/Development/portfolio-react/src/pages/WorkItem.js",["84","85"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { workState } from '../workState';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport ContactModule from '../components/ContactModule';\n\n\n\nconst WorkItem = () => {\n    const history = useHistory();\n    const url = history.location.pathname;\n    const [workItems, setWorkItems] = useState(workState);\n    const [work, setWork] = useState(null);\n    const [backgroundColor, setBackgroundColor] = useState(null);\n    const featuredStyles = {\n        backgroundColor: backgroundColor,\n    };\n\n\n    //useEffect\n    useEffect(() => {\n        const currentWork = workItems.filter((stateWork) => stateWork.url === url);\n        setWork(currentWork[0]);\n        setBackgroundColor(currentWork[0].carouselBackground);\n    }, [workItems, url]);\n\n\n\n    return (\n        <>\n            {work && (\n                <div>\n                    <section className=\"banner work__banner\">\n                        <div className=\"l-default\">\n                            <div className=\"work__title\">\n                                <h1 class=\"heading-xlarge\">{work.companyName}</h1>\n                            </div>\n                            <div className=\"work__overview\">\n                                <div className=\"work__overview-item\">\n                                    <h2 className=\"heading-h3 text--red\">Who are they?</h2>\n                                    <p className=\"text--meta\">\n                                        {work.whoAre}\n                                    </p>\n                                </div>\n                                <div className=\"work__overview-item\">\n                                    <h2 className=\"heading-h3 text--red\">The brief</h2>\n                                    <ul className=\"text--meta\">\n                                        {work.brief.map((brief) => (\n                                            <BriefListItem\n                                                briefPoint={brief.briefPoint}\n                                                key={brief.briefPoint}\n                                            />\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div className=\"work__overview-item\">\n                                    <h2 className=\"heading-h3 text--red\">Delivarables</h2>\n                                    <ul className=\"text--meta\">\n                                        {work.deliverables.map((deliverables) => (\n                                            <DeliverablesListItem\n                                                deliverablesPoint={deliverables.deliverablesPoint}\n                                                key={deliverables.deliverablesPoint}\n                                            />\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"work__featured\" style={featuredStyles}>\n                        <div className=\"work__featured-left\">\n                            <Tabs className=\"tabs tabs--work\">\n                                {work.carouselImages.map((carouselImages) => (\n                                    <TabPanel>\n                                        <div className=\"tabs__image\">\n                                            <img src={carouselImages.carouselImage} alt={carouselImages.carouselAltText} />\n                                        </div>\n                                    </TabPanel>\n                                ))}\n                                <TabList className=\"tabs__nav\">\n                                    {work.carouselImages.map((carouselImages, i) => (\n                                        <Tab className=\"tabs__nav-item\">\n                                            <a className=\"button\">{i + 1}</a>\n                                        </Tab>\n                                    ))}\n                                </TabList>\n                            </Tabs>\n                        </div>\n                        <div className=\"work__featured-right\">\n                            <div className=\"work__featured-content\">\n                                <h2 className=\"heading-large\">{work.carouselTitle}</h2>\n                                <h3>{work.carouselSubtitle}</h3>\n                                <div className=\"work__featured-text\" dangerouslySetInnerHTML={{ __html: work.carouselText }}>\n                                    { }\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"work__content\">\n                        <div className=\"l-default\">\n                            <h2 className=\"heading-large\">{work.contentTitle}</h2>\n                            {work.contentModules.map((contentModules) => (\n                                <div className=\"work__content-container\">\n                                    <div className=\"work__content-left\">\n                                        <div className=\"work__content-image\">\n                                            <img src={contentModules.contentImg} alt={contentModules.contentImgAltText} />\n                                        </div>\n                                    </div>\n                                    <div className=\"work__content-right\">\n                                        <div className=\"work__content-title\">\n                                            <h3>{contentModules.contentSubtitle}</h3>\n                                        </div>\n                                        <div className=\"work__content-copy\" dangerouslySetInnerHTML={{ __html: contentModules.contentText }}>\n                                            {/* HTML content gets parsed here */}\n                                        </div>\n                                        {contentModules.link && (\n                                            <div className=\"work__content-link\">\n                                                <a href={contentModules.link} className=\"button\" target=\"_blank\" rel=\"noreferrer\">{contentModules.linkText}</a>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </section>\n                    <section className=\"work__conclusion secondary\">\n                        <div className=\"l-default\">\n                            <div className=\"work__conclusion-container\">\n                                <h2 className=\"heading-large\">Finished Product</h2>\n                                <div className=\"work__conclusion-copy text--lead\" dangerouslySetInnerHTML={{ __html: work.conclusionText }}>\n\n                                    {/* HTML content gets parsed here */}\n\n                                </div>\n                                <div className=\"work__conclusion-link\">\n                                    <a href={work.conclusionLink} className=\"button\" target=\"_blank\" rel=\"noreferrer\">{work.conclusionLinkText}</a>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <ContactModule />\n                </div>\n            )}\n        </>\n    )\n};\n\n\n//Brief List item component\nconst BriefListItem = ({ briefPoint }) => {\n    return (\n        <li>{briefPoint}</li>\n    )\n};\n//Delivarable List item component\nconst DeliverablesListItem = ({ deliverablesPoint }) => {\n    return (\n        <li>{deliverablesPoint}</li>\n    )\n};\n\n\nexport default WorkItem;","/Users/Ruben/Development/portfolio-react/src/workState.js",[],["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":23,"nodeType":"94","messageId":"95","endLine":7,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":9,"column":23,"nodeType":"94","messageId":"95","endLine":9,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":58,"column":45,"nodeType":"98","endLine":58,"endColumn":67},{"ruleId":"92","severity":1,"message":"93","line":13,"column":23,"nodeType":"94","messageId":"95","endLine":13,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":84,"column":45,"nodeType":"98","endLine":84,"endColumn":67},{"ruleId":"88","replacedBy":"99"},{"ruleId":"90","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'setWorkItems' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["101"],["102"],"no-global-assign","no-unsafe-negation"]